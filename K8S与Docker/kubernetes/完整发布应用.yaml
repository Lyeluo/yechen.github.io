#构建镜像库
docker run -d -p 8081:8081 -p 5000:5000 --name nexus3 --restart=always uhub.service.ucloud.cn/pub021/nexus3:latest

#查看密码
docker cp nexus3:/nexus-data/admin.password ./admin.password && cat ./admin.password

#添加http信任
#"insecure-registries":["192.168.32.181"]
vi /etc/docker/daemon.json
service docker restart

#登录镜像库
docker login 192.168.32.181:5000

#推送一个镜像
docker pull busybox:latest
docker tag busybox:latest 192.168.32.181:5000/local_demo/busybox:v1.0
docker push 192.168.32.181:5000/local_demo/busybox:v1.0

#清理本地镜像
docker rmi 192.168.32.181:5000/local_demo/busybox:v1.0
docker rmi busybox:latest

#退出镜像库
docker logout 192.168.32.181:5000

#设定密码数据
#echo -n '{"auths":{"192.168.32.181:5000":{"Username":"admin","Password":"000000","Email":""}}}' | base64 -w 0

#添加命名空间
kubectl apply -f - <<EOF
apiVersion: v1
kind: Namespace
metadata:
   name: base
EOF

#添加密码数据
kubectl apply -f - <<EOF
apiVersion: v1
kind: Secret
metadata:
  name: ykb
  namespace: base
data:
  .dockerconfigjson: eyJhdXRocyI6eyIxOTIuMTY4LjMyLjE4MTo1MDAwIjp7IlVzZXJuYW1lIjoiYWRtaW4iLCJQYXNzd29yZCI6IjAwMDAwMCIsIkVtYWlsIjoiIn19fQ==
type: kubernetes.io/dockerconfigjson
EOF


#发布应用
kubectl apply -f - <<EOF
#应用
kind: Deployment
apiVersion: apps/v1
metadata:
  #名称
  name: ykb-httpd
  #命名空间
  namespace: base
spec:
  #配置标记k8s1.16必填
  selector:
    matchLabels:
      app: ykb-httpd
  #启动应用数量
  replicas: 1
  #从容器启动到应用正常提供服务
  minReadySeconds: 10
  #策略
  strategy:
    #更新类型
    type: RollingUpdate
    #滚动更新
    rollingUpdate:
      #更新时允许最大激增的容器数
      maxSurge: 1
      #更新时允许最大 unavailable 容器数
      maxUnavailable: 0
  #模板
  template:
    #数据描述[元数据]
    metadata:
      #标签
      labels:
        #应用
        app: ykb-httpd
    #规格
    spec:
      #容器拉取权限
      imagePullSecrets:
        - name : ykb
      #容器
      containers:
        #名称
      - name: ykb-httpd
        #镜像
        image: 192.168.32.181:5000/local_demo/busybox:v1.0
        ports:
        - name: http
          containerPort: 80
        #镜像挂载目录
        volumeMounts:
        - name: time
          mountPath: /etc/localtime
        command: ["/bin/sh","-c","echo 'this is ykb-httpd' > /var/www/index.html; httpd -f -p 80 -h /var/www"]
        #计算资源配置
        resources:
          #启动限制
          requests:
            #初始化CPU用量
            cpu: "100m"
            #初始化内存用量
            memory: "128Mi"
          #最大限制
          limits:
            #限制CPU最大用量
            cpu: "100m"
            #限制内存最大用量
            memory: "128Mi"
      #实际目录挂载
      volumes:
      #宿主机时间文件
      - name: time
        hostPath:
          path: /etc/localtime
EOF

#发布服务
kubectl apply -f - <<EOF
#服务
kind: Service
apiVersion: v1
#数据描述[元数据]
metadata:
  #名称
  name: ykb-httpd
  #命名空间
  namespace: base
#规格
spec:
  #容器
  selector:
    #应用
    app: ykb-httpd
  #端口
  ports:
      #名称
    - name: http
      #协议
      protocol: TCP
      #对外开放端口
      port: 14000
      #容器开放端口
      targetPort: 80
  #类型
  type: ClusterIP
  #对外开放的IP地址
  externalIPs: [192.168.32.181]
EOF